<configuration>

    <springProperty scope="context" name="endpoint" source="aliyun.log.endpoint" defaultValue=""/>
    <springProperty scope="context" name="accessKeyId" source="aliyun.log.accessKeyId" defaultValue=""/>
    <springProperty scope="context" name="accessKey" source="aliyun.log.accessKey" defaultValue=""/>
    <springProperty scope="context" name="projectName" source="aliyun.log.projectName" defaultValue=""/>
    <springProperty scope="context" name="logstore" source="aliyun.log.logstore" defaultValue=""/>
    <springProperty scope="context" name="traceLogstore" source="aliyun.log.traceLogstore" defaultValue=""/>
    <springProfile name="test,dev">
<!--        &lt;!&ndash;为了防止进程退出时，内存中的数据丢失，请加上此选项&ndash;&gt;
        <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>
        <appender name="ali-log" class="com.aliyun.openservices.log.logback.LoghubAppender">
            &lt;!&ndash;必选项&ndash;&gt;
            &lt;!&ndash; 账号及网络配置 &ndash;&gt;
            <endpoint>${endpoint}</endpoint>
            <accessKeyId>${accessKeyId}</accessKeyId>
            <accessKey>${accessKey}</accessKey>

            &lt;!&ndash; sls 项目配置 &ndash;&gt;
            <projectName>${projectName}</projectName>
            <logstore>${logstore}</logstore>
            &lt;!&ndash;必选项 (end)&ndash;&gt;

            &lt;!&ndash; 可选项 &ndash;&gt;
            <topic>lay-topic</topic>
            <source>lay-source</source>

            &lt;!&ndash; 可选项 详见 '参数说明'&ndash;&gt;
            <packageTimeoutInMS>3000</packageTimeoutInMS>
            <logsCountPerPackage>4096</logsCountPerPackage>
            <logsBytesPerPackage>3145728</logsBytesPerPackage>
            <memPoolSizeInByte>104857600</memPoolSizeInByte>
            <retryTimes>3</retryTimes>
            <maxIOThreadSizeInPool>8</maxIOThreadSizeInPool>

            &lt;!&ndash; 可选项 通过配置 encoder 的 pattern 自定义 log 的格式 &ndash;&gt;
            <encoder>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{0} - %msg%n
                </pattern>
                <charset>UTF-8</charset>
            </encoder>

            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">&lt;!&ndash; 只打印INFO级别的日志 &ndash;&gt;
                <level>INFO</level>
            </filter>
        </appender>

        <appender name="ali-trace-log" class="com.aliyun.openservices.log.logback.LoghubAppender">
            &lt;!&ndash;必选项&ndash;&gt;
            &lt;!&ndash; 账号及网络配置 &ndash;&gt;
            <endpoint>${endpoint}</endpoint>
            <accessKeyId>${accessKeyId}</accessKeyId>
            <accessKey>${accessKey}</accessKey>

            &lt;!&ndash; sls 项目配置 &ndash;&gt;
            <projectName>${projectName}</projectName>
            <logstore>${traceLogstore}</logstore>
            &lt;!&ndash;必选项 (end)&ndash;&gt;

            &lt;!&ndash; 可选项 &ndash;&gt;
            <topic>lay-topic</topic>
            <source>lay-source</source>

            &lt;!&ndash; 可选项 详见 '参数说明'&ndash;&gt;
            <packageTimeoutInMS>3000</packageTimeoutInMS>
            <logsCountPerPackage>4096</logsCountPerPackage>
            <logsBytesPerPackage>3145728</logsBytesPerPackage>
            <memPoolSizeInByte>104857600</memPoolSizeInByte>
            <retryTimes>3</retryTimes>
            <maxIOThreadSizeInPool>8</maxIOThreadSizeInPool>

            <filter class="com.lay.log.core.filter.LogChainFilter"/>
            &lt;!&ndash; 可选项 通过配置 encoder 的 pattern 自定义 log 的格式 &ndash;&gt;
            <encoder>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{req.hostIp} %X{req.requestNo} [%thread] %-5level %logger{0} -
                    %msg%n
                </pattern>
                &lt;!&ndash;<pattern>%d %-5level [%thread] %logger{0}: %msg%n</pattern>&ndash;&gt;
                <charset>UTF-8</charset>
            </encoder>

            &lt;!&ndash; 可选项 设置时间格式 &ndash;&gt;
            <timeFormat>yyyy-MM-dd'T'HH:mmZ</timeFormat>
            &lt;!&ndash; 可选项 设置时区 &ndash;&gt;
            <timeZone>Asia/Shanghai</timeZone>

            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">&lt;!&ndash; 只打印INFO级别的日志 &ndash;&gt;
                <level>INFO</level>
            </filter>
        </appender>-->

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder
                by default -->
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%L- %msg%n
                </pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>
        <appender name="FILE" class="ch.qos.logback.core.FileAppender">
            <file>d:/log.out</file>
            <append>true</append>
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%L- %msg%n</pattern>
                <!--<pattern>%msg%n</pattern>-->
                <charset>utf-8</charset>
            </encoder>
        </appender>
        <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <queueSize>512</queueSize>
            <appender-ref ref ="FILE"/>
        </appender>
        <!-- 可用来获取StatusManager中的状态 -->
        <!--<statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>-->
        <root>
            <level value="INFO"/>
            <!--<appender-ref ref="loghubAppender1"/>-->
            <appender-ref ref="STDOUT"/>
            <!--<appender-ref ref="ASYNC"/>-->
<!--            <appender-ref ref="ali-log"/>
            <appender-ref ref="ali-trace-log"/>-->
        </root>
    </springProfile>


</configuration>